import "@cadl-lang/rest";
import "@azure-tools/cadl-autorest";
import "./decorators.js";

@serviceTitle("Pet Store Service")
@serviceVersion("2021-03-25")
namespace PetStore;

// Model types
model Pet {
  name: string;
  tag?: string;

  @minValue(0)
  @maxValue(20)
  age: int32;
}

model Toy {
  id: int64;
  petId: int64;
  name: string;
}

@doc("Error")
model Error {
  code: int32;
  message: string;
}

@doc("Not modified")
model NotModified<T> {
  @header statusCode: 304;
  @body body: T;
}

model ResponsePage<T> {
  items: T[];
  nextLink: string;
}

model PetId {
  @path petId: int32;
}

@doc("Manage your pets.")
@resource("/pets")
namespace Pets {
  @doc("Delete a pet.")
  op delete(... PetId): OkResponse<{}> | Error;

  @fancyDoc("List pets.")
  @list
  op list(@query nextLink?: string): OkResponse<ResponsePage<Pet>> | Error;

  @doc("Returns a pet. Supports eTags.")
  op read(... PetId): OkResponse<Pet> | NotModified<Pet> | Error;

  op create(@body pet: Pet): OkResponse<Pet> | Error;
}

@resource("/pets/{petId}/toys")
namespace ListPetToysResponse {
  @list
  op list(@path petId: string, @query nameFilter: string): OkResponse<ResponsePage<Toy>> | Error;
}

/*import "@cadl-lang/rest";
import "@azure-tools/cadl-autorest";


namespace AcmeCloud {
  model TestResource { };

  op ProvisionEndpoint(endpoint: string): TestResource;
}

model TestResourceProperties {
  streamingEndpoint: string;
}

model TestResource {
  id: string;
  name: string;
  description?: string;
  properties: TestResourceProperties;
}
*/